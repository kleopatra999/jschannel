'use strict';
const shelljs = require('shelljs'),
  path = require('path'),
  _ = require('lodash'),
  fs = require('fs');

module.exports.clone = opts => cloneFolder(opts);
module.exports.readPackageJson = readPackageJson;
module.exports.writePackageJson = writePackageJson;
module.exports.rmFolder = rmFolder;

function cloneFolder(opts) {
  const options = _.merge(defaults(), opts);
  var clonedDir = path.resolve(shelljs.tempdir(), Math.ceil(Math.random() * 100000).toString());

  shelljs.mkdir(clonedDir);
  shelljs.cp('-r', `${options.folder}/*`, clonedDir);
  shelljs.cp('-r', `${options.folder}/.*`, clonedDir);

  shelljs.pushd(clonedDir);

  const packageJson = readPackageJson();
  if (packageJson.name) {
    packageJson.name = options.name;
  }
  packageJson.private = options.private;
  writePackageJson(packageJson);
  return clonedDir;
}

function rmFolder(dir) {
  shelljs.popd();
  shelljs.rm('-r', dir);
}

function readPackageJson() {
  return JSON.parse(shelljs.cat('package.json'));
}

function writePackageJson(packageJson) {
  fs.writeFileSync('package.json', JSON.stringify(packageJson), 'utf8');
}

function defaults() {
  return {
    folder: '.',
    name: undefined,
    private: false
  };
}
